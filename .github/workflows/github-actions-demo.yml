name: GitHub Actions Demo

on:
  push:
    branches:
      - master

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Checkout the repository code
      - name: Check out repository code
        uses: actions/checkout@v4

      # Setup Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'  # Specify the version of Go you want to use

      # List files in the repository
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      # Run Go application
      - name: Run Go application
        run: go run .

      # Extract version from version.go
      - name: Extract version from version.go
        id: extract_version
        run: |
          VERSION=$(grep '^var Version' version.go | sed -E 's/var Version = "(.*)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      # Commit any changes (if needed)
      - name: Commit changes
        if: always()  # Always attempt this, just in case there are changes to commit
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "Push changes with version ${{ env.VERSION }}" || echo "No changes to commit"

      # Push the code
      - name: Push changes to repository
        run: |
          git push origin master

      # Tag the repository with the extracted version
      - name: Tag the repository
        if: success()  # Only run this step if the previous steps were successful
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token provided by GitHub Actions
        run: |
          VERSION="${{ env.VERSION }}"
          git tag "v$VERSION"
          git push origin "v$VERSION"

      # Print status of the job
      - run: echo "üçè This job's status is ${{ job.status }}."
